name: Robot Framework Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  mobile-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Android SDK
      uses: actions/cache@v3
      with:
        path: |
          ~/.android/cache
          ~/.gradle/caches
        key: ${{ runner.os }}-android-sdk-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-android-sdk-
          
    - name: Install system images
      run: |
        echo "y" | sdkmanager "system-images;android-34;google_apis;x86_64"
        
    - name: Create AVD
      run: |
        echo "no" | avdmanager create avd -n test_emulator -k "system-images;android-34;google_apis;x86_64" -d "pixel_7" --force
        
    - name: Start emulator and run tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 34
        target: google_apis
        arch: x86_64
        profile: pixel_7
        script: |
          echo "=== Installing APK ==="
          if [ -f "./automation_dhyan_9thSept.apk" ]; then
            echo "Installing APK..."
            adb install -r ./automation_dhyan_9thSept.apk
            echo "APK installed successfully"
          else
            echo "APK file not found, skipping installation"
          fi
          
          echo "=== Starting Appium ==="
          npm install -g appium@latest
          appium driver install uiautomator2
          appium --port 4723 &
          sleep 10
          
          echo "=== Running Robot Framework Tests ==="
          robot --outputdir results --include "WarishTest" tests/
          
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: mobile-test-results
        path: |
          results/
        retention-days: 30
        
    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Robot Framework Tests
        path: results/output.xml
        reporter: java-junit

  web-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
        
    - name: Run web tests
      run: |
        echo "=== Running Web Tests ==="
        robot --outputdir web-results --include "WebTest" tests/
        
    - name: Upload web test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: web-test-results
        path: |
          web-results/
        retention-days: 30
        
    - name: Publish web test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Web Tests
        path: web-results/output.xml
        reporter: java-junit
